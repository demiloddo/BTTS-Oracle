str2 <- tolower(str2)
str1 <- get_consonants(str1)
str2 <- get_consonants(str2)
common_elements <- intersect(str1, str2)
return(length(common_elements) >= 3)
}
defenders<- compare_and_rename_all(defenders, "Player", "Squad", lineups_defenders, "name", "team")
compare_and_rename_all <- function(df1, col1, col_team1, df2, col2, col_team2) {
for (i in 1:nrow(df1)) {
for (j in 1:nrow(df2)) {
if (compare_strings(df1[i, col1], df2[j, col2]) & (df1[i, col_team1]== df2[j, col_team2])) {
print(df1[i, col1])
print(df2[j, col2])
df1[i, col1] <- df2[j, col2]
}
}
}
return(df1)
}
defenders<- compare_and_rename_all(defenders, "Player", "Squad", lineups_defenders, "name", "team")
new_defenders <- data.frame(matrix(ncol = ncol(defenders), nrow = 0))
colnames(new_defenders) <- colnames(defenders)
compare_and_rename_all <- function(df1, col1, col_team1, df2, col2, col_team2, df3) {
for (i in 1:nrow(df1)) {
for (j in 1:nrow(df2)) {
if (compare_strings(df1[i, col1], df2[j, col2]) & (df1[i, col_team1]== df2[j, col_team2])) {
print(df1[i, col1])
print(df2[j, col2])
#df1[i, col1] <- df2[j, col2]
df3 <- rbind(df3, df1[i, col1])
}
}
}
return(df1)
}
defenders<- compare_and_rename_all(defenders, "Player", "Squad", lineups_defenders, "name", "team", new_defenders)
compare_and_rename_all <- function(df1, col1, col_team1, df2, col2, col_team2, df3) {
for (i in 1:nrow(df1)) {
for (j in 1:nrow(df2)) {
if (compare_strings(df1[i, col1], df2[j, col2]) & (df1[i, col_team1]== df2[j, col_team2])) {
print(df1[i, col1])
print(df2[j, col2])
#df1[i, col1] <- df2[j, col2]
df3 <- rbind(df3, df1[i, col1])
}
}
}
return(df3)
}
new_defenders<- compare_and_rename_all(defenders, "Player", "Squad", lineups_defenders, "name", "team", new_defenders)
View(new_defenders)
compare_and_rename_all <- function(df1, col1, col_team1, df2, col2, col_team2, df3) {
for (i in 1:nrow(df1)) {
for (j in 1:nrow(df2)) {
if (compare_strings(df1[i, col1], df2[j, col2]) & (df1[i, col_team1]== df2[j, col_team2])) {
print(df1[i, col1])
print(df2[j, col2])
#df1[i, col1] <- df2[j, col2]
df3 <- rbind(df3, df1[i])
}
}
}
return(df3)
}
new_defenders<- compare_and_rename_all(defenders, "Player", "Squad", lineups_defenders, "name", "team", new_defenders)
defenders[12]
defenders[5]
defenders[,5]
defenders[5,]
compare_and_rename_all <- function(df1, col1, col_team1, df2, col2, col_team2, df3) {
for (i in 1:nrow(df1)) {
for (j in 1:nrow(df2)) {
if (compare_strings(df1[i, col1], df2[j, col2]) & (df1[i, col_team1]== df2[j, col_team2])) {
print(df1[i, col1])
print(df2[j, col2])
#df1[i, col1] <- df2[j, col2]
df3 <- rbind(df3, df1[i,])
}
}
}
return(df3)
}
new_defenders<- compare_and_rename_all(defenders, "Player", "Squad", lineups_defenders, "name", "team", new_defenders)
n_col(defenders)
ncol(defenders)
ncol(new_defenders)
new_defenders <- data.frame(matrix(ncol = ncol(defenders), nrow = 0))
colnames(new_defenders) <- colnames(defenders)
new_defenders<- compare_and_rename_all(defenders, "Player", "Squad", lineups_defenders, "name", "team", new_defenders)
View(new_defenders)
compare_strings <- function(str1, str2) {
# Convert the strings to lowercase to make the comparison case-insensitive
str1 <- tolower(str1)
str2 <- tolower(str2)
str1 <- get_consonants(str1)
str2 <- get_consonants(str2)
common_elements <- intersect(str1, str2)
return(length(common_elements) >= 5)
}
new_defenders<- compare_and_rename_all(defenders, "Player", "Squad", lineups_defenders, "name", "team", new_defenders)
levenshtein_distance <- function(s1, s2) {
m <- nchar(s1)
n <- nchar(s2)
if (m == 0) {
return(n)
}
if (n == 0) {
return(m)
}
d <- matrix(0, nrow = m + 1, ncol = n + 1)
for (i in 1:(m + 1)) {
d[i, 1] <- i - 1
}
for (j in 1:(n + 1)) {
d[1, j] <- j - 1
}
for (j in 2:(n + 1)) {
for (i in 2:(m + 1)) {
if (substr(s1, i - 1, i - 1) == substr(s2, j - 1, j - 1)) {
d[i, j] <- d[i - 1, j - 1]
} else {
d[i, j] <- min(d[i - 1, j] + 1, d[i, j - 1] + 1, d[i - 1, j - 1] + 1)
}
}
}
return(d[m + 1, n + 1])
}
is_similar <- function(s1, s2, threshold = 2) {
distance <- levenshtein_distance(s1, s2)
if (distance <= threshold) {
return(TRUE)
} else {
return(FALSE)
}
}
compare_and_rename_all <- function(df1, col1, col_team1, df2, col2, col_team2, df3) {
for (i in 1:nrow(df1)) {
for (j in 1:nrow(df2)) {
#compare_strings(df1[i, col1], df2[j, col2])
if ( is_similar(df1[i, col1], df2[j, col2], threshold = 2) & (df1[i, col_team1]== df2[j, col_team2])) {
print(df1[i, col1])
print(df2[j, col2])
#df1[i, col1] <- df2[j, col2]
df3 <- rbind(df3, df1[i,])
}
}
}
return(df3)
}
new_defenders<- compare_and_rename_all(defenders, "Player", "Squad", lineups_defenders, "name", "team", new_defenders)
defenders <- subset(archive, archive[[4]] == "DF" & archive[[11]] >=1000 )
defenders <-  defenders[c("Clr", "Clr", "BlkSh", "TklDriPast", "PasAtt", "PasTotCmp","AerWon", "CarMis", "PasBlocks", "Player","Squad", "Rk", "MP", "Starts", "X90s" )]
new_defenders <- data.frame(matrix(ncol = ncol(defenders), nrow = 0))
colnames(new_defenders) <- colnames(defenders)
defenders$Player <- iconv(defenders$Player, from = "ISO-8859-1", to = "UTF-8")
new_defenders<- compare_and_rename_all(defenders, "Player", "Squad", lineups_defenders, "name", "team", new_defenders)
View(new_defenders)
defenders <- subset(archive, archive[[4]] == "DF" & archive[[11]] >=1000 )
defenders <-  defenders[c("Clr", "Clr", "BlkSh", "TklDriPast", "PasAtt", "PasTotCmp","AerWon", "CarMis", "PasBlocks", "Player","Squad", "Rk", "MP", "Starts", "X90s" )]
new_defenders <- data.frame(matrix(ncol = ncol(defenders), nrow = 0))
colnames(new_defenders) <- colnames(defenders)
defenders$Player <- iconv(defenders$Player, from = "ISO-8859-1", to = "UTF-8")
new_defenders<- compare_and_rename_all(defenders, "Player", "Squad", lineups_defenders, "name", "team", new_defenders)
compare_and_rename_all <- function(df1, col1, col_team1, df2, col2, col_team2, df3) {
for (i in 1:nrow(df1)) {
for (j in 1:nrow(df2)) {
#compare_strings(df1[i, col1], df2[j, col2])
if ( is_similar(df1[i, col1], df2[j, col2], threshold = 3) & (df1[i, col_team1]== df2[j, col_team2])) {
print(df1[i, col1])
print(df2[j, col2])
#df1[i, col1] <- df2[j, col2]
df3 <- rbind(df3, df1[i,])
}
}
}
return(df3)
}
defenders <- subset(archive, archive[[4]] == "DF" & archive[[11]] >=1000 )
defenders <-  defenders[c("Clr", "Clr", "BlkSh", "TklDriPast", "PasAtt", "PasTotCmp","AerWon", "CarMis", "PasBlocks", "Player","Squad", "Rk", "MP", "Starts", "X90s" )]
new_defenders <- data.frame(matrix(ncol = ncol(defenders), nrow = 0))
colnames(new_defenders) <- colnames(defenders)
defenders$Player <- iconv(defenders$Player, from = "ISO-8859-1", to = "UTF-8")
new_defenders<- compare_and_rename_all(defenders, "Player", "Squad", lineups_defenders, "name", "team", new_defenders)
View(new_defenders)
compare_and_rename_all <- function(df1, col1, col_team1, df2, col2, col_team2, df3) {
for (i in 1:nrow(df1)) {
for (j in 1:nrow(df2)) {
#compare_strings(df1[i, col1], df2[j, col2])
if ( is_similar(df1[i, col1], df2[j, col2], threshold = 4) & (df1[i, col_team1]== df2[j, col_team2])) {
print(df1[i, col1])
print(df2[j, col2])
#df1[i, col1] <- df2[j, col2]
df3 <- rbind(df3, df1[i,])
}
}
}
return(df3)
}
defenders <- subset(archive, archive[[4]] == "DF" & archive[[11]] >=1000 )
defenders <-  defenders[c("Clr", "Clr", "BlkSh", "TklDriPast", "PasAtt", "PasTotCmp","AerWon", "CarMis", "PasBlocks", "Player","Squad", "Rk", "MP", "Starts", "X90s" )]
new_defenders <- data.frame(matrix(ncol = ncol(defenders), nrow = 0))
colnames(new_defenders) <- colnames(defenders)
defenders$Player <- iconv(defenders$Player, from = "ISO-8859-1", to = "UTF-8")
new_defenders<- compare_and_rename_all(defenders, "Player", "Squad", lineups_defenders, "name", "team", new_defenders)
View(new_defenders)
compare_and_rename_all <- function(df1, col1, col_team1, df2, col2, col_team2, df3) {
for (i in 1:nrow(df1)) {
for (j in 1:nrow(df2)) {
#compare_strings(df1[i, col1], df2[j, col2])
if ( is_similar(df1[i, col1], df2[j, col2], threshold = 6) & (df1[i, col_team1]== df2[j, col_team2])) {
print(df1[i, col1])
print(df2[j, col2])
#df1[i, col1] <- df2[j, col2]
df3 <- rbind(df3, df1[i,])
}
}
}
return(df3)
}
defenders <- subset(archive, archive[[4]] == "DF" & archive[[11]] >=1000 )
defenders <-  defenders[c("Clr", "Clr", "BlkSh", "TklDriPast", "PasAtt", "PasTotCmp","AerWon", "CarMis", "PasBlocks", "Player","Squad", "Rk", "MP", "Starts", "X90s" )]
new_defenders <- data.frame(matrix(ncol = ncol(defenders), nrow = 0))
colnames(new_defenders) <- colnames(defenders)
defenders$Player <- iconv(defenders$Player, from = "ISO-8859-1", to = "UTF-8")
new_defenders<- compare_and_rename_all(defenders, "Player", "Squad", lineups_defenders, "name", "team", new_defenders)
View(new_defenders)
jaccard_distance <- function(str1, str2) {
str1_chars <- unique(strsplit(str1, "")[[1]])
str2_chars <- unique(strsplit(str2, "")[[1]])
common_chars <- intersect(str1_chars, str2_chars)
total_chars <- union(str1_chars, str2_chars)
if (length(total_chars) == 0) {
return(0)
} else {
return(1 - length(common_chars) / length(total_chars))
}
}
jaccard_distance("marus", "marusic")
compare_and_rename_all <- function(df1, col1, col_team1, df2, col2, col_team2, df3) {
for (i in 1:nrow(df1)) {
for (j in 1:nrow(df2)) {
#compare_strings(df1[i, col1], df2[j, col2])
#is_similar(df1[i, col1], df2[j, col2]
if (jaccard_distance(df1[i, col1], df2[j, col2]) & (df1[i, col_team1]== df2[j, col_team2])) {
print(df1[i, col1])
print(df2[j, col2])
#df1[i, col1] <- df2[j, col2]
df3 <- rbind(df3, df1[i,])
}
}
}
return(df3)
}
compare_and_rename_all <- function(df1, col1, col_team1, df2, col2, col_team2, df3) {
for (i in 1:nrow(df1)) {
for (j in 1:nrow(df2)) {
#compare_strings(df1[i, col1], df2[j, col2])
#is_similar(df1[i, col1], df2[j, col2]
if ((jaccard_distance(df1[i, col1], df2[j, col2])<0.50) & (df1[i, col_team1]== df2[j, col_team2])) {
print(df1[i, col1])
print(df2[j, col2])
#df1[i, col1] <- df2[j, col2]
df3 <- rbind(df3, df1[i,])
}
}
}
return(df3)
}
defenders <- subset(archive, archive[[4]] == "DF" & archive[[11]] >=1000 )
defenders <-  defenders[c("Clr", "Clr", "BlkSh", "TklDriPast", "PasAtt", "PasTotCmp","AerWon", "CarMis", "PasBlocks", "Player","Squad", "Rk", "MP", "Starts", "X90s" )]
new_defenders <- data.frame(matrix(ncol = ncol(defenders), nrow = 0))
colnames(new_defenders) <- colnames(defenders)
defenders$Player <- iconv(defenders$Player, from = "ISO-8859-1", to = "UTF-8")
new_defenders<- compare_and_rename_all(defenders, "Player", "Squad", lineups_defenders, "name", "team", new_defenders)
#Clr : Tackles in which the tackler's team won possession of the ball
View(new_defenders)
compare_and_rename_all <- function(df1, col1, col_team1, df2, col2, col_team2, df3) {
for (i in 1:nrow(df1)) {
for (j in 1:nrow(df2)) {
#compare_strings(df1[i, col1], df2[j, col2])
#is_similar(df1[i, col1], df2[j, col2]
if ((jaccard_distance(df1[i, col1], df2[j, col2])<0.60) & (df1[i, col_team1]== df2[j, col_team2])) {
print(df1[i, col1])
print(df2[j, col2])
#df1[i, col1] <- df2[j, col2]
df3 <- rbind(df3, df1[i,])
}
}
}
return(df3)
}
defenders <- subset(archive, archive[[4]] == "DF" & archive[[11]] >=1000 )
defenders <-  defenders[c("Clr", "Clr", "BlkSh", "TklDriPast", "PasAtt", "PasTotCmp","AerWon", "CarMis", "PasBlocks", "Player","Squad", "Rk", "MP", "Starts", "X90s" )]
new_defenders <- data.frame(matrix(ncol = ncol(defenders), nrow = 0))
colnames(new_defenders) <- colnames(defenders)
defenders$Player <- iconv(defenders$Player, from = "ISO-8859-1", to = "UTF-8")
new_defenders<- compare_and_rename_all(defenders, "Player", "Squad", lineups_defenders, "name", "team", new_defenders)
#Clr : Tackles in which the tackler's team won possession of the ball
#Int : Interceptions
View(new_defenders)
compare_and_rename_all <- function(df1, col1, col_team1, df2, col2, col_team2, df3) {
for (i in 1:nrow(df1)) {
for (j in 1:nrow(df2)) {
#compare_strings(df1[i, col1], df2[j, col2])
#is_similar(df1[i, col1], df2[j, col2]
if ((jaccard_distance(df1[i, col1], df2[j, col2])<0.70) & (df1[i, col_team1]== df2[j, col_team2])) {
print(df1[i, col1])
print(df2[j, col2])
#df1[i, col1] <- df2[j, col2]
df3 <- rbind(df3, df1[i,])
}
}
}
return(df3)
}
defenders <- subset(archive, archive[[4]] == "DF" & archive[[11]] >=1000 )
defenders <-  defenders[c("Clr", "Clr", "BlkSh", "TklDriPast", "PasAtt", "PasTotCmp","AerWon", "CarMis", "PasBlocks", "Player","Squad", "Rk", "MP", "Starts", "X90s" )]
new_defenders <- data.frame(matrix(ncol = ncol(defenders), nrow = 0))
colnames(new_defenders) <- colnames(defenders)
defenders$Player <- iconv(defenders$Player, from = "ISO-8859-1", to = "UTF-8")
new_defenders<- compare_and_rename_all(defenders, "Player", "Squad", lineups_defenders, "name", "team", new_defenders)
compare_and_rename_all <- function(df1, col1, col_team1, df2, col2, col_team2, df3) {
for (i in 1:nrow(df1)) {
for (j in 1:nrow(df2)) {
#compare_strings(df1[i, col1], df2[j, col2])
#is_similar(df1[i, col1], df2[j, col2]
if ((jaccard_distance(df1[i, col1], df2[j, col2])<0.65) & (df1[i, col_team1]== df2[j, col_team2])) {
print(df1[i, col1])
print(df2[j, col2])
#df1[i, col1] <- df2[j, col2]
df3 <- rbind(df3, df1[i,])
}
}
}
return(df3)
}
defenders <- subset(archive, archive[[4]] == "DF" & archive[[11]] >=1000 )
defenders <-  defenders[c("Clr", "Clr", "BlkSh", "TklDriPast", "PasAtt", "PasTotCmp","AerWon", "CarMis", "PasBlocks", "Player","Squad", "Rk", "MP", "Starts", "X90s" )]
new_defenders <- data.frame(matrix(ncol = ncol(defenders), nrow = 0))
colnames(new_defenders) <- colnames(defenders)
defenders$Player <- iconv(defenders$Player, from = "ISO-8859-1", to = "UTF-8")
new_defenders<- compare_and_rename_all(defenders, "Player", "Squad", lineups_defenders, "name", "team", new_defenders)
View(new_defenders)
new_defenders <- new_defenders[!duplicated(new_defenders$name), ]
defenders <- subset(archive, archive[[4]] == "DF" & archive[[11]] >=1000 )
defenders <-  defenders[c("Clr", "Clr", "BlkSh", "TklDriPast", "PasAtt", "PasTotCmp","AerWon", "CarMis", "PasBlocks", "Player","Squad", "Rk", "MP", "Starts", "X90s" )]
new_defenders <- data.frame(matrix(ncol = ncol(defenders), nrow = 0))
colnames(new_defenders) <- colnames(defenders)
defenders$Player <- iconv(defenders$Player, from = "ISO-8859-1", to = "UTF-8")
new_defenders<- compare_and_rename_all(defenders, "Player", "Squad", lineups_defenders, "name", "team", new_defenders)
dup_rows <- duplicated(new_defenders)
dup_rows <- duplicated(new_defenders$Player)
new_defenders <- new_defenders[!dup_rows, ]
View(new_defenders)
compare_and_rename_all <- function(df1, col1, col_team1, df2, col2, col_team2, df3) {
for (i in 1:nrow(df1)) {
for (j in 1:nrow(df2)) {
#compare_strings(df1[i, col1], df2[j, col2])
#is_similar(df1[i, col1], df2[j, col2]
if ((jaccard_distance(df1[i, col1], df2[j, col2])<0.67) & (df1[i, col_team1]== df2[j, col_team2])) {
print(df1[i, col1])
print(df2[j, col2])
#df1[i, col1] <- df2[j, col2]
df3 <- rbind(df3, df1[i,])
}
}
}
return(df3)
}
defenders <- subset(archive, archive[[4]] == "DF" & archive[[11]] >=1000 )
defenders <-  defenders[c("Clr", "Clr", "BlkSh", "TklDriPast", "PasAtt", "PasTotCmp","AerWon", "CarMis", "PasBlocks", "Player","Squad", "Rk", "MP", "Starts", "X90s" )]
new_defenders <- data.frame(matrix(ncol = ncol(defenders), nrow = 0))
colnames(new_defenders) <- colnames(defenders)
defenders$Player <- iconv(defenders$Player, from = "ISO-8859-1", to = "UTF-8")
new_defenders<- compare_and_rename_all(defenders, "Player", "Squad", lineups_defenders, "name", "team", new_defenders)
dup_rows <- duplicated(new_defenders$Player)
new_defenders <- new_defenders[!dup_rows, ]
new_defenders <- new_defenders[!duplicated(new_defenders$name), ]
defenders <- subset(archive, archive[[4]] == "DF" & archive[[11]] >=1000 )
defenders <-  defenders[c("Clr", "Clr", "BlkSh", "TklDriPast", "PasAtt", "PasTotCmp","AerWon", "CarMis", "PasBlocks", "Player","Squad", "Rk", "MP", "Starts", "X90s" )]
new_defenders <- data.frame(matrix(ncol = ncol(defenders), nrow = 0))
colnames(new_defenders) <- colnames(defenders)
defenders$Player <- iconv(defenders$Player, from = "ISO-8859-1", to = "UTF-8")
new_defenders<- compare_and_rename_all(defenders, "Player", "Squad", lineups_defenders, "name", "team", new_defenders)
dup_rows <- duplicated(new_defenders$Player)
new_defenders <- new_defenders[!dup_rows, ]
compare_and_rename_all <- function(df1, col1, col_team1, df2, col2, col_team2, df3) {
for (i in 1:nrow(df1)) {
for (j in 1:nrow(df2)) {
#compare_strings(df1[i, col1], df2[j, col2])
#is_similar(df1[i, col1], df2[j, col2]
if ((jaccard_distance(df1[i, col1], df2[j, col2])<0.70) & (df1[i, col_team1]== df2[j, col_team2])) {
print(df1[i, col1])
print(df2[j, col2])
#df1[i, col1] <- df2[j, col2]
df3 <- rbind(df3, df1[i,])
}
}
}
return(df3)
}
defenders <- subset(archive, archive[[4]] == "DF" & archive[[11]] >=1000 )
defenders <-  defenders[c("Clr", "Clr", "BlkSh", "TklDriPast", "PasAtt", "PasTotCmp","AerWon", "CarMis", "PasBlocks", "Player","Squad", "Rk", "MP", "Starts", "X90s" )]
new_defenders <- data.frame(matrix(ncol = ncol(defenders), nrow = 0))
colnames(new_defenders) <- colnames(defenders)
defenders$Player <- iconv(defenders$Player, from = "ISO-8859-1", to = "UTF-8")
new_defenders<- compare_and_rename_all(defenders, "Player", "Squad", lineups_defenders, "name", "team", new_defenders)
dup_rows <- duplicated(new_defenders$Player)
new_defenders <- new_defenders[!dup_rows, ]
View(new_defenders)
compare_and_rename_all <- function(df1, col1, col_team1, df2, col2, col_team2, df3) {
for (i in 1:nrow(df1)) {
for (j in 1:nrow(df2)) {
#compare_strings(df1[i, col1], df2[j, col2])
#is_similar(df1[i, col1], df2[j, col2]
if ((jaccard_distance(df1[i, col1], df2[j, col2])<0.75) & (df1[i, col_team1]== df2[j, col_team2])) {
print(df1[i, col1])
print(df2[j, col2])
#df1[i, col1] <- df2[j, col2]
df3 <- rbind(df3, df1[i,])
}
}
}
return(df3)
}
defenders <- subset(archive, archive[[4]] == "DF" & archive[[11]] >=1000 )
defenders <-  defenders[c("Clr", "Clr", "BlkSh", "TklDriPast", "PasAtt", "PasTotCmp","AerWon", "CarMis", "PasBlocks", "Player","Squad", "Rk", "MP", "Starts", "X90s" )]
new_defenders <- data.frame(matrix(ncol = ncol(defenders), nrow = 0))
colnames(new_defenders) <- colnames(defenders)
defenders$Player <- iconv(defenders$Player, from = "ISO-8859-1", to = "UTF-8")
new_defenders<- compare_and_rename_all(defenders, "Player", "Squad", lineups_defenders, "name", "team", new_defenders)
dup_rows <- duplicated(new_defenders$Player)
new_defenders <- new_defenders[!dup_rows, ]
View(new_defenders)
View(lineups_defenders)
View(new_defenders)
View(lineups_defenders)
compare_and_rename_all <- function(df1, col1, col_team1, df2, col2, col_team2, df3) {
for (i in 1:nrow(df1)) {
for (j in 1:nrow(df2)) {
#compare_strings(df1[i, col1], df2[j, col2])
#is_similar(df1[i, col1], df2[j, col2]
if ((jaccard_distance(df1[i, col1], df2[j, col2])<0.60) & (df1[i, col_team1]== df2[j, col_team2])) {
print(df1[i, col1])
print(df2[j, col2])
#df1[i, col1] <- df2[j, col2]
df3 <- rbind(df3, df1[i,])
}
}
}
return(df3)
}
defenders <- subset(archive, archive[[4]] == "DF" & archive[[11]] >=1000 )
defenders <-  defenders[c("Clr", "Clr", "BlkSh", "TklDriPast", "PasAtt", "PasTotCmp","AerWon", "CarMis", "PasBlocks", "Player","Squad", "Rk", "MP", "Starts", "X90s" )]
new_defenders <- data.frame(matrix(ncol = ncol(defenders), nrow = 0))
colnames(new_defenders) <- colnames(defenders)
defenders$Player <- iconv(defenders$Player, from = "ISO-8859-1", to = "UTF-8")
new_defenders<- compare_and_rename_all(defenders, "Player", "Squad", lineups_defenders, "name", "team", new_defenders)
dup_rows <- duplicated(new_defenders$Player)
new_defenders <- new_defenders[!dup_rows, ]
View(new_defenders)
#defenders <-  players %>% filter(position == "Defender")
defenders <- subset(archive, archive[[4]] == "DF" & archive[[11]] >=400 )
defenders <-  defenders[c("Clr", "Clr", "BlkSh", "TklDriPast", "PasAtt", "PasTotCmp","AerWon", "CarMis", "PasBlocks", "Player","Squad", "Rk", "MP", "Starts", "X90s" )]
new_defenders <- data.frame(matrix(ncol = ncol(defenders), nrow = 0))
colnames(new_defenders) <- colnames(defenders)
defenders$Player <- iconv(defenders$Player, from = "ISO-8859-1", to = "UTF-8")
new_defenders<- compare_and_rename_all(defenders, "Player", "Squad", lineups_defenders, "name", "team", new_defenders)
dup_rows <- duplicated(new_defenders$Player)
new_defenders <- new_defenders[!dup_rows, ]
View(new_defenders)
lineups <-read.csv("lineups25.csv", sep="," ,header=TRUE)
lineups$team <- replace(lineups$team, lineups$team=="VER", "Hellas Verona")
lineups$team <- replace(lineups$team, lineups$team=="LAZ", "Lazio")
lineups$team <- replace(lineups$team, lineups$team=="SAM", "Sampdoria")
lineups$team <- replace(lineups$team, lineups$team=="CRE", "Cremonese")
lineups$team <- replace(lineups$team, lineups$team=="ROM", "Roma")
lineups$team <- replace(lineups$team, lineups$team=="JUV", "Juventus")
lineups$team <- replace(lineups$team, lineups$team=="TOR", "Torino")
lineups$team <- replace(lineups$team, lineups$team=="NAP", "Napoli")
lineups$team <- replace(lineups$team, lineups$team=="NAP", "Napoli")
lineups$team <- replace(lineups$team, lineups$team=="MON", "Monza")
lineups$team <- replace(lineups$team, lineups$team=="EMP", "Empoli")
lineups$team <- replace(lineups$team, lineups$team=="ATA", "Atalanta")
lineups$team <- replace(lineups$team, lineups$team=="UDI", "Udinese")
lineups$team <- replace(lineups$team, lineups$team=="FIO", "Fiorentina")
lineups$team <- replace(lineups$team, lineups$team=="MIL", "AC Milan")
lineups$team <- replace(lineups$team, lineups$team=="SPE", "Spezia")
lineups$team <- replace(lineups$team, lineups$team=="INT", "Inter Milan")
lineups$team <- replace(lineups$team, lineups$team=="LEC", "Lecce")
lineups$team <- replace(lineups$team, lineups$team=="SAL", "Salernitana")
lineups$team <- replace(lineups$team, lineups$team=="UDI", "Udinese")
lineups$team <- replace(lineups$team, lineups$team=="BOL", "Bologna")
lineups_defenders <- subset(lineups, lineups[[3]] == "D" )
View(lineups_defenders)
View(matches)
for (k in 1:length(team)){
for (i in 1:nrow(training_dataset)) {
# Check the value in the condition column
if (training_dataset$home_team_name[i] == team[k]) {
training_dataset$attack_home[i] =  teams[teams$common_name == team[k], "attack"]
training_dataset$defence_home[i] =  teams[teams$common_name == team[k], "defence"]
}
if (training_dataset$away_team_name[i] == team[k]) {
# Add the value to the sum for "F"
training_dataset$attack_away[i] =  teams[teams$common_name == team[k], "attack"]
training_dataset$defence_away[i] = teams[teams$common_name == team[k], "defence"]
}
}
}
View(testing_dataset)
View(testing_dataset)
